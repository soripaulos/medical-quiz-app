#!/bin/bash

# Supabase Environment Variables Setup Script
# This script helps you set up environment variables safely for local development

echo "🔧 Supabase Environment Variables Setup"
echo "========================================"
echo ""

# Check if .env.local already exists
if [ -f ".env.local" ]; then
    echo "⚠️  .env.local already exists!"
    read -p "Do you want to overwrite it? (y/N): " overwrite
    if [[ ! $overwrite =~ ^[Yy]$ ]]; then
        echo "Setup cancelled."
        exit 0
    fi
fi

echo "📝 Please provide your Supabase credentials:"
echo ""

# Get Supabase URL
read -p "Enter your Supabase Project URL (https://xxx.supabase.co): " supabase_url
if [ -z "$supabase_url" ]; then
    echo "❌ Supabase URL is required!"
    exit 1
fi

# Get Anon Key
read -p "Enter your Supabase Anon Key: " anon_key
if [ -z "$anon_key" ]; then
    echo "❌ Anon Key is required!"
    exit 1
fi

# Get Service Role Key
read -s -p "Enter your Supabase Service Role Key (hidden): " service_key
echo ""
if [ -z "$service_key" ]; then
    echo "❌ Service Role Key is required!"
    exit 1
fi

# Create .env.local file
cat > .env.local << EOF
# Supabase Configuration
# Generated by setup-env.sh on $(date)

# Public Supabase Configuration (safe to expose to client)
NEXT_PUBLIC_SUPABASE_URL=$supabase_url
NEXT_PUBLIC_SUPABASE_ANON_KEY=$anon_key

# Server-side Supabase Configuration (keep private)
SUPABASE_SERVICE_ROLE_KEY=$service_key

# Optional: Build configuration
NODE_ENV=development
EOF

echo ""
echo "✅ Environment variables configured successfully!"
echo "📁 Created .env.local file"
echo ""
echo "🚀 Next steps:"
echo "1. Start the development server: npm run dev"
echo "2. Test the API: curl http://localhost:3000/api/questions/filter-options"
echo "3. Look for 'method: database' in the response (instead of 'mock')"
echo ""
echo "🔒 Security reminder:"
echo "- .env.local is already in .gitignore and won't be committed"
echo "- Never share these credentials publicly"
echo "- Use GitHub Secrets for CI/CD and deployment"